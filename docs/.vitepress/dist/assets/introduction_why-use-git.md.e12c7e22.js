import{_ as t,o as a,c as e,Q as r}from"./chunks/framework.4042aa0a.js";const _=JSON.parse('{"title":"কেন গিট ব্যবহার করবেন? – (Why Use Git?)","description":"","frontmatter":{},"headers":[],"relativePath":"introduction/why-use-git.md","filePath":"introduction/why-use-git.md","lastUpdated":null}'),i={name:"introduction/why-use-git.md"},o=r('<h1 id="কেন-গিট-ব্যবহার-করবেন-–-why-use-git" tabindex="-1">কেন গিট ব্যবহার করবেন? – (Why Use Git?) <a class="header-anchor" href="#কেন-গিট-ব্যবহার-করবেন-–-why-use-git" aria-label="Permalink to &quot;কেন গিট ব্যবহার করবেন? – (Why Use Git?)&quot;">​</a></h1><p>গিট কেবল একটি ভার্সন কন্ট্রোল সিস্টেম নয়, এটি একটি শক্তিশালী হাতিয়ার যা আপনার প্রজেক্ট ম্যানেজমেন্ট এবং টিমওয়ার্ককে করে তোলে অনেক সহজ ও কার্যকর।</p><h2 id="১-কোডের-ইতিহাস-সংরক্ষণ" tabindex="-1">১. কোডের ইতিহাস সংরক্ষণ <a class="header-anchor" href="#১-কোডের-ইতিহাস-সংরক্ষণ" aria-label="Permalink to &quot;১. কোডের ইতিহাস সংরক্ষণ&quot;">​</a></h2><p>গিট প্রতিটি পরিবর্তনকে একটি <strong>কমিট হিসেবে</strong> সংরক্ষণ করে। ফলে আপনি পূর্বের যেকোনো অবস্থায় ফিরে যেতে পারেন। এটি আপনার কোডের একটি টাইম মেশিনের মতো!</p><blockquote><p>উদাহরণ: &quot;গত সপ্তাহের কোডটা আবার দরকার&quot; — গিটে এটি কয়েক সেকেন্ডের কাজ।</p></blockquote><h2 id="২-টিম-ওয়ার্ক-সহজ-করে" tabindex="-1">২. টিম ওয়ার্ক সহজ করে <a class="header-anchor" href="#২-টিম-ওয়ার্ক-সহজ-করে" aria-label="Permalink to &quot;২. টিম ওয়ার্ক সহজ করে&quot;">​</a></h2><p>একটি প্রজেক্টে একাধিক ডেভেলপার কাজ করলেও, গিট তাদের কাজ আলাদা করে হ্যান্ডেল করতে পারে। পরে সেই কাজগুলো <strong>মার্জ</strong> করে একত্রিত করা যায়।</p><ul><li>আলাদা <strong>ব্রাঞ্চ</strong> ব্যবহার করে ফিচার ডেভেলপমেন্ট</li><li>কনফ্লিক্ট হলে সমাধানের সুযোগ</li></ul><h2 id="৩-ব্যাকআপ-ও-নিরাপত্তা" tabindex="-1">৩. ব্যাকআপ ও নিরাপত্তা <a class="header-anchor" href="#৩-ব্যাকআপ-ও-নিরাপত্তা" aria-label="Permalink to &quot;৩. ব্যাকআপ ও নিরাপত্তা&quot;">​</a></h2><p>রিমোট রিপোজিটরিতে (যেমন: GitHub, GitLab) আপনার প্রজেক্ট স্টোর করলে সেটি একটি <strong>অনলাইন ব্যাকআপ</strong> হিসেবে কাজ করে।</p><ul><li>লোকাল কম্পিউটার নষ্ট হলেও প্রজেক্ট থাকবে সুরক্ষিত</li><li>আপনি যেকোনো জায়গা থেকে অ্যাক্সেস করতে পারবেন</li></ul><h2 id="৪-ফিচার-এক্সপেরিমেন্টের-সুবিধা" tabindex="-1">৪. ফিচার এক্সপেরিমেন্টের সুবিধা <a class="header-anchor" href="#৪-ফিচার-এক্সপেরিমেন্টের-সুবিধা" aria-label="Permalink to &quot;৪. ফিচার এক্সপেরিমেন্টের সুবিধা&quot;">​</a></h2><p>নতুন ফিচার ট্রাই করতে চাইলে আলাদা ব্রাঞ্চে কাজ করতে পারেন। এতে মূল কোডে কোনো প্রভাব পড়ে না।</p><ul><li>রিস্ক ফ্রি এক্সপেরিমেন্ট</li><li>দরকার না হলে ব্রাঞ্চটি ডিলিট করে দিন</li></ul><h2 id="৫-ওপেন-সোর্স-কন্ট্রিবিউশনে-বাধ্যতামূলক" tabindex="-1">৫. ওপেন সোর্স কন্ট্রিবিউশনে বাধ্যতামূলক <a class="header-anchor" href="#৫-ওপেন-সোর্স-কন্ট্রিবিউশনে-বাধ্যতামূলক" aria-label="Permalink to &quot;৫. ওপেন সোর্স কন্ট্রিবিউশনে বাধ্যতামূলক&quot;">​</a></h2><p>GitHub বা GitLab-এ থাকা যেকোনো ওপেন সোর্স প্রজেক্টে কন্ট্রিবিউট করতে চাইলে গিটের জ্ঞান প্রয়োজন।</p><h2 id="সংক্ষেপে-উপকারিতা" tabindex="-1">সংক্ষেপে উপকারিতা <a class="header-anchor" href="#সংক্ষেপে-উপকারিতা" aria-label="Permalink to &quot;সংক্ষেপে উপকারিতা&quot;">​</a></h2><table><thead><tr><th>সুবিধা</th><th>বর্ণনা</th></tr></thead><tbody><tr><td>ইতিহাস ট্র্যাকিং</td><td>কোডের প্রতিটি পরিবর্তন সংরক্ষিত থাকে</td></tr><tr><td>টিম সহযোগিতা</td><td>একাধিক ডেভেলপার সহজে একসাথে কাজ করতে পারে</td></tr><tr><td>ব্রাঞ্চিং ও মার্জিং</td><td>আলাদা ফিচারে কাজ করে একত্র করা যায়</td></tr><tr><td>ব্যাকআপ ও রিমোট অ্যাক্সেস</td><td>GitHub-এর মতো প্ল্যাটফর্মে স্টোর করা যায়</td></tr><tr><td>ওপেন সোর্স অংশগ্রহণ</td><td>গিট ছাড়া ওপেন সোর্সে কন্ট্রিবিউট করা সম্ভব নয়</td></tr></tbody></table><h2 id="উপসংহার" tabindex="-1">উপসংহার <a class="header-anchor" href="#উপসংহার" aria-label="Permalink to &quot;উপসংহার&quot;">​</a></h2><p>গিট শেখা মানেই আপনার প্রজেক্ট পরিচালনায় দক্ষতা অর্জন। একবার গিটে অভ্যস্ত হয়ে গেলে, সফটওয়্যার ডেভেলপমেন্ট অনেক বেশি মসৃণ ও কার্যকর হবে।</p>',20),d=[o];function l(h,n,s,u,c,p){return a(),e("div",null,d)}const q=t(i,[["render",l]]);export{_ as __pageData,q as default};
